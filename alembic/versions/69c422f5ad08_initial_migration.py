"""Initial migration

Revision ID: 69c422f5ad08
Revises: 
Create Date: 2024-11-19 14:47:18.527124

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = '69c422f5ad08'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('counterparty',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_cards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('issuer', sa.String(), nullable=True),
    sa.Column('reward_category_map', sa.JSON(), nullable=True),
    sa.Column('benefits', sa.JSON(), nullable=True),
    sa.Column('credit_needed', sa.JSON(), nullable=True),
    sa.Column('sign_on_bonus', sa.JSON(), nullable=True),
    sa.Column('apr', sa.JSON(), nullable=True),
    sa.Column('annual_fee', sa.JSON(), nullable=True),
    sa.Column('statement_credit', sa.JSON(), nullable=True),
    sa.Column('primary_reward_unit', sa.String(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('cardratings_scrape',
    sa.Column('scrape_id', sa.Integer(), nullable=False),
    sa.Column('credit_cards_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description_used', sa.Integer(), nullable=True),
    sa.Column('unparsed_issuer', sa.String(), nullable=True),
    sa.Column('unparsed_credit_needed', sa.String(), nullable=True),
    sa.Column('unparsed_card_attributes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['credit_cards_id'], ['credit_cards.id'], ),
    sa.PrimaryKeyConstraint('scrape_id')
    )
    op.create_table('enrollments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('institution_name', sa.String(), nullable=False),
    sa.Column('signatures', sa.JSON(), nullable=False),
    sa.Column('last_updated', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_table('user_credit_card_association',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('credit_card_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'credit_card_id')
    )
    op.create_table('wallets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_edited', sa.Date(), nullable=False),
    sa.Column('is_custom', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wallets_id'), 'wallets', ['id'], unique=False)
    op.create_table('accounts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('enrollment_id', sa.String(), nullable=False),
    sa.Column('institution_name', sa.String(), nullable=False),
    sa.Column('institution_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('subtype', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('last_four', sa.String(), nullable=False),
    sa.Column('last_updated', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['enrollment_id'], ['enrollments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.create_table('banks_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('have_banks', sa.JSON(), nullable=True),
    sa.Column('preferred_banks', sa.JSON(), nullable=True),
    sa.Column('avoid_banks', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['preferences.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('business_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('business_type', sa.JSON(), nullable=True),
    sa.Column('business_size', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['preferences.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('consumer_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('favorite_grocery_stores', sa.JSON(), nullable=True),
    sa.Column('favorite_general_goods_stores', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['preferences.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('credit_profile_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('credit_score', sa.Integer(), nullable=True),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.Column('lifestyle', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['preferences.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('rewards_programs_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('preferred_rewards_programs', sa.JSON(), nullable=True),
    sa.Column('avoid_rewards_programs', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['preferences.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('wallet_new_card_association',
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('credit_card_id', sa.Integer(), nullable=False),
    sa.Column('is_held', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('wallet_id', 'credit_card_id')
    )
    op.create_table('transactions',
    sa.Column('txn_id', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('running_balance', sa.Float(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('txn_id')
    )
    op.create_index(op.f('ix_transactions_account_id'), 'transactions', ['account_id'], unique=False)
    op.create_index(op.f('ix_transactions_date'), 'transactions', ['date'], unique=False)
    op.create_table('transaction_details',
    sa.Column('txn_id', sa.String(), nullable=False),
    sa.Column('counterparty_id', sa.Integer(), nullable=True),
    sa.Column('processing_status', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['counterparty_id'], ['counterparty.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['txn_id'], ['transactions.txn_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('txn_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_details')
    op.drop_index(op.f('ix_transactions_date'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_account_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('wallet_new_card_association')
    op.drop_table('rewards_programs_preferences')
    op.drop_table('credit_profile_preferences')
    op.drop_table('consumer_preferences')
    op.drop_table('business_preferences')
    op.drop_table('banks_preferences')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_wallets_id'), table_name='wallets')
    op.drop_table('wallets')
    op.drop_table('user_credit_card_association')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_table('preferences')
    op.drop_table('enrollments')
    op.drop_table('cardratings_scrape')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('credit_cards')
    op.drop_table('counterparty')
    # ### end Alembic commands ###
